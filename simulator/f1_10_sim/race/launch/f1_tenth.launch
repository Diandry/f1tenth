<?xml version="1.0"?>
<launch>
<!--   <include file="$(find racecar_gazebo)/launch/racecar_tunnel.launch"/> -->
  <include file="$(find racecar_gazebo)/launch/racecar.launch">
    <!--<arg name="world_name" value="track_barca"/>-->
    <arg name="world_name" value="track_porto"/>
    <!--<arg name="world_name" value="lab_track2"/>-->
  </include>

  <!--<node pkg="race" name="control_node" type="control.py" output="screen"/>-->
  <node pkg="race" name="sim_connector_node" type="sim_connector.py"/>
  <node pkg="race" name="keyboard_node" type="keyboard.py" output="screen"/>
  <node name="message_to_tf" pkg="wall_following" type="message_to_tf.py"/>
  <!--<include file="$(find race)/launch/laser_scan_matcher.launch"/>-->
  <!--<node pkg="race" name="levine_demo_node" type="levineDemo.py"/>-->
  <arg name="map_file" default="$(find    race)/maps/porto_track.yaml"/>
  <node name="map_server" pkg="map_server" type="map_server" args="$(arg    map_file)"/>
  <!--<arg name="map_file" default="$(find    race)/maps/april_1_5.yaml"/>
  <node name="map_server" pkg="map_server" type="map_server" args="$(arg    map_file)"/>-->
  <!--<include file="$(find race)/launch/amcl.launch"/>-->
  <!--<include file="$(find particle_filter)/launch/localize.launch"/>-->


  <!--<node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
    
    <rosparam file="$(find race)/cfg/costmap_common_params.yaml" command="load" ns="global_costmap" /> 
    <rosparam file="$(find race)/cfg/costmap_common_params.yaml" command="load" ns="local_costmap" />
    <rosparam file="$(find race)/cfg/local_costmap_param.yaml" command="load" />
    <rosparam file="$(find race)/cfg/global_costmap.yaml" command="load" /> 
    <rosparam file="$(find race)/cfg/base_local_planner_params.yaml" command="load" />

    <param name="base_local_planner" value="teb_local_planner/TebLocalPlannerROS" />
    <param name="controller_frequency" value="3.0" />
    <param name="clearing_rotation_allowed" value="False"/>
    <param name="oscillation_distance" value="0.5"/>
  </node>-->

  <node pkg="wall_following" name="twist_to_ackermann" type="twist_to_ackermann_teb.py" output="screen"/>
  <node type="rviz" name="rviz" pkg="rviz" args="-d $(find hector_mapping)/launch/teb.rviz"/>
  <node pkg="rostopic" type="rostopic" name="rostopic" args="pub initialpose geometry_msgs/PoseWithCovarianceStamped '
	{
		header: {
			frame_id: map
		}, 
		pose: {
			pose: {
				position: {
					x: 0.0, 
					y: 0.0, 
					z: 0.0}, 
				orientation: {
					x: 0.0,
					y: 0.0,
					z: 0.0,
					w: 0.9999999999999}
			}
		}
	}'" />
</launch>
